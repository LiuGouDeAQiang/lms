// Code generated by http://www.gotool.top
package model

import (
	"time"
)

type User struct {
	Id          int64     `gorm:"column:id;primary_key;AUTO_INCREMENT;NOT NULL"`
	Uid         int64     `gorm:"column:uid;default:NULL"`
	Name        string    `gorm:"column:name;default:NULL"`
	Password    string    `gorm:"column:password;default:NULL"`
	Telephone   string    `gorm:"column:telephone;default:0"`
	CreatedTime time.Time `gorm:"column:created_time;default:NULL"`
	UpdatedTime time.Time `gorm:"column:updated_time;default:NULL"`
}

func (u *User) TableName() string {
	return "user"
}

type Books struct {
	Id                 uint64    `gorm:"column:id;type:bigint(20) unsigned;primary_key;comment:书的id" json:"id"`
	Uid                int64     `gorm:"column:uid;type:bigint(20)" json:"uid"`
	Title              string    `gorm:"column:title;type:varchar(200);comment:书名" json:"title"`
	Author             string    `gorm:"column:author;type:varchar(50);comment:作者" json:"author"`
	ImgUrl             string    `gorm:"column:img_url;type:varchar(200);comment:封面地址" json:"img_url"`
	Price              float64   `gorm:"column:price;type:double;default:1;comment:价格" json:"price"`
	Num                int64     `gorm:"column:num;type:bigint(20)" json:"num"`
	PublishingHouse    string    `gorm:"column:publishing_house;type:varchar(50);comment:出版社" json:"publishing_house"`
	Translator         string    `gorm:"column:translator;type:varchar(50);comment:译者" json:"translator"`
	PublishDate        time.Time `gorm:"column:publish_date;type:date;comment:出版时间" json:"publish_date"`
	Pages              int       `gorm:"column:pages;type:int(11);default:100;comment:页数" json:"pages"`
	ISBN               string    `gorm:"column:ISBN;type:varchar(20);comment:ISBN号码" json:"ISBN"`
	BriefIntroduction  string    `gorm:"column:brief_introduction;type:varchar(15000);comment:内容简介" json:"brief_introduction"`
	AuthorIntroduction string    `gorm:"column:author_introduction;type:varchar(5000);comment:作者简介" json:"author_introduction"`
	DelFlg             int       `gorm:"column:del_flg;type:int(11);default:0;comment:删除标识" json:"del_flg"`
	CreatedTime        time.Time `gorm:"column:created_time;type:datetime" json:"created_time"`
	UpdatedTime        time.Time `gorm:"column:updated_time;type:datetime" json:"updated_time"`
}

func (b *Books) TableName() string {
	return "books"
}

type UserBooks struct {
	Id          int64     `gorm:"column:id;primary_key;AUTO_INCREMENT;NOT NULL"`
	UserId      int64     `gorm:"column:user_id;NOT NULL"`
	UserName    string    `gorm:"column:user_name;default:NULL"`
	BooksTitle  string    `gorm:"column:books_title;default:NULL"`
	Status      int64     `gorm:"column:status;NOT NULL"`
	CreatedTime time.Time `gorm:"column:created_time;default:NULL"`
	UpdatedTime time.Time `gorm:"column:updated_time;default:NULL"`
}

func (u *UserBooks) TableName() string {
	return "user_books"
}
